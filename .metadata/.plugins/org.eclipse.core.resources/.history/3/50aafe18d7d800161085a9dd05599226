package exit.services.principal;

import java.lang.reflect.Method;

import exit.services.principal.peticiones.GetIdsAEliminar;
import exit.services.singletons.ApuntadorDeEntidad;

public class PreEjecuciones {

	public static void borrarEntidadRightNow() {
		Integer cantidad=-1;
		System.out.println("Borrando "+ApuntadorDeEntidad.getInstance().getEntidadActual()+".");
		while(cantidad>0 || cantidad==-1){
			GetIdsAEliminar g= new GetIdsAEliminar();
			Object o=g.realizarPeticion();
			if(o instanceof Integer)
				cantidad=(Integer)o;
			else
				cantidad=-777;
		}
		System.out.println("Borrando finalizado.");
	}
	
	public static void test(String... palabra){
		System.out.println(palabra);
	}
	public static void main(String[] args) {
		Class a= PreEjecuciones.class;
		try {
			Method m= a.getMethod("test", String[].class);
			m.invoke(null,"palabra");
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} 
	}
	public static void ejecutar(String nombreMetodo){
		ejecutar(nombreMetodo,null);
	}
	public static Object ejecutar(String nombreMetodo, String[] parametros){
		Class a= PreEjecuciones.class;
		try {
			Method m;
			if(parametros!=null && parametros.length>0){
				m= a.getMethod(nombreMetodo, String[].class);
			}
			else{
				m=a.getMethod(nombreMetodo, null);
			}
			Object o=m.invoke(null,"palabra");
			return o;
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} 
	}
}
