package aa.bb;
import exit.services.fileHandler.ConvertidosJSONCSV;
import exit.services.json.IJsonRestEstructura;
import exit.services.json.JsonRestIncidentes;

public class TestConvertidosJSONCSV extends ConvertidosJSONCSV{

	@Override
	public IJsonRestEstructura crearJson(String[] valoresCsv, String[] cabeceras) {
		   JsonRestIncidentes jsonEstructura= new JsonRestIncidentes(pathError);
	   		jsonEstructura.setLine(line);
	   		int i;
	   		StringBuilder sb= new StringBuilder();
	   		for(i=0;i<valoresCsv.length;i++){
	   			switch (cabeceras[i]) {
	   				
					case "ID": jsonEstructura.setId(valoresCsv[i]); break;				
	   				case "NRO_SAC": jsonEstructura.setNro_sac(valoresCsv[i]); break;				
	   				case "MODO_CONTACTO": jsonEstructura.setModo_contacto(valoresCsv[i]); break;				
	   				case "CAUSA": jsonEstructura.setCausa(valoresCsv[i]); break;				
	   				case "PRODUCTO": jsonEstructura.setProducto(valoresCsv[i]); break;				
	   				case "MOTIVO": jsonEstructura.setMotivo(valoresCsv[i]); break;				
	   				case "ESTADO": jsonEstructura.setEstado(valoresCsv[i]); break;				
	   				case "SECTOR_RESPONSABLE": jsonEstructura.setSector_responsable(valoresCsv[i]); break;				
	   				case "HILO1": jsonEstructura.setHilo1(valoresCsv[i]); sb.append(valoresCsv[i]); break;				
	   				case "HILO2": jsonEstructura.setHilo2(valoresCsv[i]); sb.append(valoresCsv[i]); break;				
	   				case "ANIO": jsonEstructura.setAnio(valoresCsv[i]); break;				
				}
			}
				jsonEstructura.setHilo_conversacion(sb.toString());

	   		return jsonEstructura;
 }

}
